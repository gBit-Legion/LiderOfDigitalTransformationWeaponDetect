import telebot
import threading
from telebot import types
from loguru import logger



TOKEN = '6686505205:AAHhdgG7ZZ7Dmq3ziVXMGzn5gHPi58IJM9s'
bot = telebot.TeleBot(TOKEN)
logger.success('telega is started')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
location_transmissions = {}


def stop_location_transmission(chat_id):
    if chat_id in location_transmissions:
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        location_transmissions.pop(chat_id)
        print(f"–¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞ {chat_id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ!")
    else:
        print(f"–¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞ {chat_id} –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞.")


@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    button = types.KeyboardButton(text="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è üìç", request_location=True)
    markup.add(button)
    bot.send_message(chat_id,
                     "–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É —Ç—Ä–∞–Ω—Å–ª–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
                     reply_markup=markup)


@bot.message_handler(func=lambda message: True, content_types=['location'])
def handle_location(message):
    chat_id = message.chat.id
    latitude = message.location.latitude
    longitude = message.location.longitude

    if chat_id in location_transmissions:
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        location_transmissions[chat_id] = (latitude, longitude)
    else:
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        location_transmissions[chat_id] = (latitude, longitude)

        # –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ —á–µ—Ä–µ–∑ 8 —á–∞—Å–æ–≤
        threading.Timer(28800, stop_location_transmission, args=[chat_id]).start()

    # –í—ã–≤–æ–¥ —Ç–µ–∫—É—â–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
    print(f"–¢–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞ {chat_id}: –®–∏—Ä–æ—Ç–∞: {latitude}, –î–æ–ª–≥–æ—Ç–∞: {longitude}")

    # –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    threading.Timer(10, update_location, args=[chat_id]).start()


def update_location(chat_id):
    if chat_id in location_transmissions:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        latitude, longitude = location_transmissions[chat_id]

        # –í—ã–≤–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
        print(f"–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞ {chat_id}: –®–∏—Ä–æ—Ç–∞: {latitude}, –î–æ–ª–≥–æ—Ç–∞: {longitude}")

        # –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        threading.Timer(10, update_location, args=[chat_id]).start()


bot.polling()